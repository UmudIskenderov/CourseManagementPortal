// <auto-generated />
using System;
using CourseManagementPortalDataAccess.Implementations.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseManagementPortalDataAccess.Migrations
{
    [DbContext(typeof(CourseManagementPortalContext))]
    [Migration("20230719101727_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsParticipated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("StudentProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentProgramId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = true,
                            Note = "Perfect",
                            StudentProgramId = 3
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = true,
                            Note = "Perfect",
                            StudentProgramId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = false,
                            Note = "Bad",
                            StudentProgramId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = false,
                            Note = "Bad",
                            StudentProgramId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = true,
                            Note = "Perfect",
                            StudentProgramId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = true,
                            StudentProgramId = 1
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2023, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsParticipated = true,
                            StudentProgramId = 2
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Duration")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = (byte)10,
                            ModificationTime = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Back-end development",
                            Price = 250m
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = (byte)6,
                            ModificationTime = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Front-end development",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2021, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = (byte)8,
                            ModificationTime = new DateTime(2021, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UX/UI design",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.LessonDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("DayOfWeek")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("StudentProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentProgramId");

                    b.ToTable("LessonDays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = (byte)1,
                            StudentProgramId = 1
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = (byte)4,
                            StudentProgramId = 1
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = (byte)2,
                            StudentProgramId = 2
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = (byte)5,
                            StudentProgramId = 2
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = (byte)3,
                            StudentProgramId = 3
                        },
                        new
                        {
                            Id = 6,
                            DayOfWeek = (byte)6,
                            StudentProgramId = 3
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2003, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationTime = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModificationTime = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Səbuhi",
                            Surname = "Məmmədov"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2003, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationTime = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModificationTime = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "İlham",
                            Surname = "Həsənli"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2003, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationTime = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModificationTime = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ümüd",
                            Surname = "İskəndərov"
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.StudentProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentPrograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 2,
                            EndDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            EndDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            EndDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2,
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1998, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cavid",
                            Profession = "Software engineer",
                            Surname = "Əliyev"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Məhəmməd",
                            Profession = "UX/UI designer",
                            Surname = "Ağayev"
                        });
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Attendance", b =>
                {
                    b.HasOne("CourseManagementPortalEntities.Entities.StudentProgram", "StudentProgram")
                        .WithMany()
                        .HasForeignKey("StudentProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentProgram");
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.LessonDay", b =>
                {
                    b.HasOne("CourseManagementPortalEntities.Entities.StudentProgram", "StudentProgram")
                        .WithMany()
                        .HasForeignKey("StudentProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentProgram");
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.Program", b =>
                {
                    b.HasOne("CourseManagementPortalEntities.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagementPortalEntities.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CourseManagementPortalEntities.Entities.StudentProgram", b =>
                {
                    b.HasOne("CourseManagementPortalEntities.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagementPortalEntities.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagementPortalEntities.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
